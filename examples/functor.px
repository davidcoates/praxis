
interface Functor f where
  map : forall ?v a b. (?v a -> b) -> ?v f a -> f b

data List a where
  Nil
  Cons (a, List a)

-- TODO unique
Natural = instance Functor List where
  map f = cases
    Nil          -> Nil
    Cons (x, xs) -> Cons (f x, (map f) xs)

