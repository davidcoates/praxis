
data List a = Nil | Cons (a, List a)

map_ : (!a -> b # e) -> !List a -> () # e
map_ _ Nil = ()
map_ f (Cons (x, xs)) = f x then map_ f xs

main : () -> () # StdOut
main () = do
  xs = Cons (1, Cons (2, Cons (3, Nil)))
  map_ putInt !xs
  map_ (\x -> putInt (x * x)) !xs
